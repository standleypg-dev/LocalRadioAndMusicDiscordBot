services:
  postgres:
    image: postgres:latest
    container_name: radio-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  radio-discord-bot:
    ports:
      - "5000:5000"
    container_name: discord-bot
    image: ${DOCKER_REGISTRY-}radiodiscordbot
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SpotifySettings__ClientId=${SPOTIFY_CLIENT_ID}
      - SpotifySettings__ClientSecret=${SPOTIFY_CLIENT_SECRET}
      - Discord__Token=${DISCORD_TOKEN}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Trust Server Certificate=true;
      - WebsiteSettings__Url=${WEBSITE_URL}
      - Cors__AllowedOrigins=[${CORS_ALLOWED_ORIGINS}]
      - JwtSettings__Secret=${JWT_SETTINGS_SECRET}
      - JwtSettings__InternalPassword=${JWT_SETTINGS_INTERNAL_PASSWORD}
      - JwtSettings__Issuer=${WEBSITE_URL}
      - JwtSettings__Audience=${WEBSITE_URL}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

volumes:
  postgres_data: